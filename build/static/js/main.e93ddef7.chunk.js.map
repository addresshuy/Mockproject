{"version":3,"sources":["App.module.css","pages/Charts/Chart.module.css","pages/Country/Country.module.css","pages/Cards/index.jsx","pages/API/index.js","pages/Charts/index.jsx","pages/Country/index.jsx","pages/TableCoutry/index.js","pages/index.js","App.js","reportWebVitals.js","index.js","pages/Cards/Cards.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Card","style","backgroundColor","width","textAlign","item","component","xs","md","cx","card","infected","CardContent","Typography","fontWeight","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDataCovid","map","countryRegion","fetchCountries","countries","name","Chart","date","dateChecked","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","options","scales","xAxes","gridLines","display","yAxes","BarChart","legend","title","text","Country","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","useStyles1","makeStyles","theme","createStyles","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onPageChange","IconButton","onClick","event","disabled","direction","Math","ceil","max","useStyles2","table","TableCountry","setPage","setRowsPerPage","tableCoutry","setTableCoutry","emptyRows","min","TableContainer","Table","Paper","TableHead","TableRow","TableCell","TableBody","slice","row","index","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","ActionsComponent","Page","state","setState","this","Charts","React","Component","App","exact","path","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e93ddef7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__34WcJ\",\"image\":\"App_image__3paDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__37KQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Country_formControl__1zziq\"};","import React from 'react';  \r\nimport styles from './Cards.module.css'  \r\nimport {Card, CardContent, Typography} from '@material-ui/core';  \r\nimport CountUp from 'react-countup';  \r\nimport cx from 'classnames';  \r\n\r\n  \r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } } ) => {  \r\n     if(!confirmed){  \r\n        return 'Please wait..';  \r\n    }  \r\n   \r\n    return (  \r\n        <div className={styles.container}>  \r\n            \r\n                <Card  style={{backgroundColor: '#f7ebeb', width: 300, textAlign: 'center'}} item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>  \r\n                    <CardContent>  \r\n                        <Typography style={{fontWeight: 'bold', color : \"#5826a4\"}} gutterBottom>Infected</Typography>  \r\n                        <Typography variant=\"h5\" style={{fontWeight: 'bold', color : \"#FF392B\"}} >  \r\n                            <CountUp start={0} end={confirmed.value} duration={3} separator=\",\" />  \r\n                        </Typography>  \r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>                \r\n                        \r\n                    </CardContent>  \r\n                </Card >  \r\n  \r\n                <Card  style={{backgroundColor: '#f7ebeb' , width: 300, textAlign: 'center'}} item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>  \r\n                    <CardContent>  \r\n                        <Typography style={{fontWeight: 'bold', color : \"#5826a4\"}}  gutterBottom>Recovered</Typography>  \r\n                        <Typography variant=\"h5\" style={{fontWeight: 'bold', color : \"#00945E\"}} >  \r\n                            <CountUp start={0} end={recovered.value} duration={3} separator=\",\" />  \r\n                        </Typography>  \r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>  \r\n                         \r\n                    </CardContent>  \r\n                </Card >  \r\n  \r\n                <Card  style={{backgroundColor: '#f7ebeb', width: 300, textAlign: 'center'}}  item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>  \r\n                    <CardContent>  \r\n                        <Typography style={{fontWeight: 'bold', color : \"#5826a4\"}} gutterBottom>Deaths</Typography>  \r\n                        <Typography variant=\"h5\" style={{fontWeight: 'bold', color : \"#222\"}}>  \r\n                            <CountUp start={0} end={deaths.value} duration={3} separator=\",\" />  \r\n                        </Typography>  \r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>  \r\n                          \r\n                    </CardContent>  \r\n                </Card >  \r\n             \r\n        </div>  \r\n        )  \r\n}  \r\nexport default Cards; ","import axios from \"axios\";\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\nconst urlconfim = 'https://covid19.mathdro.id/api/confirmed';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const fetchDataCovid = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${urlconfim}`);\r\n\r\n    return data.map(({ countryRegion, confirmed, recovered, deaths }) => ({countryRegion, confirmed, recovered, deaths  }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n// Instead of Global, it fetches the daily data for the US\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n      const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\r\n  \r\n      return data.map(({ positive, recovered, death, date }) => ({ \r\n        confirmed: positive, \r\n        recovered, \r\n        deaths: death, \r\n        date \r\n      }));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDataCovid } from \"../API\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths, dateChecked: date }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDataCovid());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n\r\n  const lineChart = dailyData.length === null? (\r\n    <Line\r\n      data={{\r\n        labels: date,\r\n        datasets: [\r\n          {\r\n            data: confirmed,\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: false,\r\n          },\r\n          {\r\n            data: recovered,\r\n            label: \"recovered\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 255, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: deaths,\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        scales: {\r\n          xAxes: [{ gridLines: { display: false } }],\r\n          yAxes: [{ gridLines: { display: false } }],\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const BarChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? BarChart : lineChart}\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./Country.module.css\";\r\nimport { fetchCountries } from \"../API\";\r\n\r\nconst Country = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [countries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">United States</option>\r\n        {countries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\nexport default Country;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  createStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport { fetchDataCovid } from \"../API\";\r\nimport \"../TableCoutry/table.scss\";\r\n\r\n\r\nconst useStyles1 = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n  })\r\n);\r\n\r\ninterface TablePaginationActionsProps {\r\n  count: number;\r\n  page: number;\r\n  rowsPerPage: number;\r\n  onPageChange: (event: MouseEvent<HTMLButtonElement>, newPage: number) => void;\r\n}\r\n\r\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event: MouseEvent<HTMLButtonElement>) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n// .sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    width: 800,\r\n  },\r\n});\r\n\r\nexport default function TableCountry() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [tableCoutry, setTableCoutry] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setTableCoutry(await fetchDataCovid());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(rowsPerPage, tableCoutry.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (\r\n    event: MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number\r\n  ) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer className=\"table-container\"  >\r\n      <Table className={classes.table} aria-label=\"custom pagination table\" component={Paper}>\r\n        <TableHead className=\"table-head\">\r\n          <TableRow>\r\n            <TableCell className='table-row'>\r\n              ID\r\n            </TableCell>\r\n            <TableCell className='table-row'>\r\n              CountryRegion\r\n            </TableCell>\r\n            <TableCell className='table-row'>\r\n              Confirmed\r\n            </TableCell>\r\n            <TableCell className='table-row'>\r\n              Recovered\r\n            </TableCell>\r\n            <TableCell className='table-row'>\r\n              Deaths\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className=\"table-body\">\r\n          {(rowsPerPage > 0\r\n            ? tableCoutry.slice(\r\n                page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage\r\n              )\r\n            : tableCoutry\r\n          ).map((row, index) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell>{index + 1}</TableCell>\r\n              <TableCell>{row.countryRegion}</TableCell>\r\n              <TableCell>{row.confirmed}</TableCell>\r\n              <TableCell>{row.recovered}</TableCell>\r\n              <TableCell>{row.deaths}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={5} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter className='table-footer'>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              colSpan={3}\r\n              count={tableCoutry.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { \"aria-label\": \"rows per page\" },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../App.module.css\";\r\nimport Cards from \"./Cards\";\r\nimport Charts from \"./Charts\";\r\nimport Country from \"./Country\";\r\nimport TableCountry from \"./TableCoutry\";\r\n\r\nimport { fetchData } from \"./API\";\r\n\r\n\r\nclass Page extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n    this.setState({ data: data, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        {/* {navbar} */}\r\n        <Cards data={data} />\r\n        <Country handleCountryChange={this.handleCountryChange} />\r\n        <Charts data={data} country={country} />\r\n        <TableCountry />\r\n        {/* {footer} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","\nimport \"./App.css\";\nimport Home from \"./pages\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <Router>\n      {/* <Header /> */}\n      <Switch>\n        {/* <Route exact path={\"/login\"} component={LoginPage} />\n          <Route exact path={\"/Registration\"} component={Registrasion} /> */}\n        <Route exact path={\"/covid\"} component={Home} />\n        {/* <Route component={PageNotFound} /> */}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__cmt3w\",\"card\":\"Cards_card__2WwSu\",\"infected\":\"Cards_infected__DDBMm\",\"recovered\":\"Cards_recovered__2bHaa\",\"deaths\":\"Cards_deaths__2ZQw1\",\"links\":\"Cards_links__1CV6j\",\"btnMyGov\":\"Cards_btnMyGov__3hC5U\",\"btnGrid\":\"Cards_btnGrid__3GxF5\"};"],"sourceRoot":""}